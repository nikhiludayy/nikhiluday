import React from "react";
import { Link } from "react-router-dom";
import SiteViewCounter from "./SiteViewCounter";

const Footer = () => {
  const data = [
    {
      img: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 28 28" fill="none"><rect width="28" height="28" rx="14" fill="#0A66C2"></rect><path d="M20.563 6.30005H7.43662C7.13512 6.30005 6.84597 6.41982 6.63277 6.63302C6.41958 6.84621 6.2998 7.13537 6.2998 7.43687V20.5632C6.2998 20.8647 6.41958 21.1539 6.63277 21.3671C6.84597 21.5803 7.13512 21.7 7.43662 21.7H20.563C20.8645 21.7 21.1536 21.5803 21.3668 21.3671C21.58 21.1539 21.6998 20.8647 21.6998 20.5632V7.43687C21.6998 7.13537 21.58 6.84621 21.3668 6.63302C21.1536 6.41982 20.8645 6.30005 20.563 6.30005ZM10.8899 19.4189H8.57451V12.0644H10.8899V19.4189ZM9.73058 11.0452C9.46795 11.0437 9.21163 10.9644 8.99399 10.8174C8.77635 10.6704 8.60714 10.4622 8.5077 10.2191C8.40827 9.97606 8.38307 9.70896 8.43529 9.45157C8.48751 9.19417 8.61481 8.95801 8.80112 8.77289C8.98743 8.58777 9.2244 8.462 9.48213 8.41143C9.73986 8.36086 10.0068 8.38777 10.2492 8.48876C10.4917 8.58976 10.6988 8.76031 10.8444 8.97889C10.99 9.19747 11.0676 9.45428 11.0674 9.71692C11.0699 9.89276 11.0369 10.0673 10.9705 10.2301C10.9041 10.393 10.8056 10.5408 10.6808 10.6647C10.5561 10.7887 10.4077 10.8862 10.2444 10.9516C10.0811 11.017 9.9064 11.0488 9.73058 11.0452ZM19.424 19.4253H17.1098V15.4074C17.1098 14.2225 16.606 13.8567 15.9558 13.8567C15.2692 13.8567 14.5955 14.3744 14.5955 15.4374V19.4253H12.2801V12.0697H14.5067V13.0889H14.5367C14.7602 12.6365 15.543 11.8633 16.7376 11.8633C18.0295 11.8633 19.4251 12.6301 19.4251 14.8759L19.424 19.4253Z" fill="white"></path></svg>`,
      link: "https://www.linkedin.com/in/nikhiluday",
      profile: "Linkedln",
    },
    {
      img: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 28 28" fill="none"><rect width="28" height="28" rx="14" fill="#191717"></rect><path fill-rule="evenodd" clip-rule="evenodd" d="M13.9965 4.8999C11.7218 4.90108 9.52163 5.70675 7.78949 7.17283C6.05735 8.63892 4.90616 10.6698 4.54176 12.9024C4.17736 15.135 4.62351 17.4236 5.80044 19.3592C6.97738 21.2947 8.80834 22.7508 10.9659 23.4672C11.4419 23.5556 11.6212 23.2606 11.6212 23.0097C11.6212 22.7589 11.6117 22.0316 11.6085 21.2364C8.94293 21.8123 8.37967 20.1116 8.37967 20.1116C7.94492 19.0072 7.31659 18.7169 7.31659 18.7169C6.4471 18.1269 7.38165 18.1379 7.38165 18.1379C8.34476 18.2058 8.85091 19.1208 8.85091 19.1208C9.70454 20.577 11.0929 20.1558 11.6387 19.9096C11.7244 19.2928 11.9735 18.8731 12.248 18.6349C10.1187 18.3951 7.88145 17.5779 7.88145 13.9272C7.86825 12.9804 8.2216 12.0648 8.86837 11.3698C8.76999 11.13 8.44155 10.1614 8.96197 8.8456C8.96197 8.8456 9.76642 8.59002 11.5974 9.82217C13.168 9.39512 14.825 9.39512 16.3955 9.82217C18.225 8.59002 19.0278 8.8456 19.0278 8.8456C19.5498 10.1582 19.2214 11.1269 19.123 11.3698C19.7718 12.0649 20.1259 12.9821 20.1115 13.9304C20.1115 17.5889 17.8696 18.3951 15.7371 18.6302C16.0798 18.9268 16.386 19.5058 16.386 20.3956C16.386 21.6703 16.3749 22.6958 16.3749 23.0097C16.3749 23.2637 16.5479 23.5603 17.0334 23.4672C19.1912 22.7507 21.0224 21.2943 22.1993 19.3585C23.3762 17.4226 23.8221 15.1336 23.4573 12.9008C23.0925 10.6681 21.9407 8.63713 20.208 7.1713C18.4753 5.70547 16.2747 4.90033 13.9997 4.8999H13.9965Z" fill="white"></path><path d="M8.04299 18.5798C8.02236 18.6271 7.9462 18.6413 7.88432 18.6082C7.82244 18.575 7.77643 18.5135 7.79864 18.4646C7.82086 18.4157 7.89543 18.4031 7.95731 18.4362C8.01919 18.4693 8.06679 18.5324 8.04299 18.5798Z" fill="white"></path><path d="M8.43183 19.0104C8.39897 19.0269 8.36138 19.0314 8.32549 19.0234C8.2896 19.0153 8.25764 18.9951 8.23508 18.9662C8.1732 18.9 8.1605 18.8085 8.2081 18.7674C8.2557 18.7264 8.34139 18.7453 8.40327 18.8116C8.46515 18.8779 8.47943 18.9694 8.43183 19.0104Z" fill="white"></path><path d="M8.80964 19.5578C8.75093 19.5988 8.65097 19.5578 8.59543 19.4758C8.58008 19.4611 8.56787 19.4434 8.55952 19.4239C8.55118 19.4044 8.54688 19.3834 8.54688 19.3622C8.54688 19.341 8.55118 19.32 8.55952 19.3005C8.56787 19.281 8.58008 19.2633 8.59543 19.2486C8.65414 19.2092 8.75411 19.2486 8.80964 19.3291C8.86517 19.4095 8.86676 19.5168 8.80964 19.5578V19.5578Z" fill="white"></path><path d="M9.32213 20.0879C9.26977 20.1463 9.16346 20.1305 9.0762 20.0516C8.98893 19.9728 8.9683 19.8655 9.02066 19.8087C9.07302 19.7519 9.17933 19.7677 9.26977 19.845C9.36021 19.9223 9.37766 20.0311 9.32213 20.0879V20.0879Z" fill="white"></path><path d="M10.0405 20.3971C10.0167 20.4713 9.90878 20.5044 9.80089 20.4728C9.693 20.4413 9.62159 20.3529 9.64222 20.2772C9.66285 20.2015 9.77233 20.1668 9.88181 20.2015C9.99129 20.2362 10.0611 20.3198 10.0405 20.3971Z" fill="white"></path><path d="M10.8245 20.4509C10.8245 20.5282 10.7357 20.5944 10.6214 20.596C10.5072 20.5976 10.4136 20.5345 10.4136 20.4572C10.4136 20.3799 10.5024 20.3136 10.6167 20.312C10.7309 20.3105 10.8245 20.372 10.8245 20.4509Z" fill="white"></path><path d="M11.5544 20.3294C11.5687 20.4067 11.4894 20.4871 11.3751 20.5061C11.2609 20.525 11.1609 20.4792 11.1466 20.4035C11.1323 20.3278 11.2149 20.2458 11.3259 20.2252C11.437 20.2047 11.5401 20.2521 11.5544 20.3294Z" fill="white"></path></svg>`,
      link: "https://www.github.com/nikhiludayy",
      profile: "Github",
    },
    {
      img: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 28 28" fill="none"><path d="M0 14C0 6.26801 6.26801 0 14 0C21.732 0 28 6.26801 28 14C28 21.732 21.732 28 14 28C6.26801 28 0 21.732 0 14Z" fill="#F26798"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M23.8034 14C23.8034 14.6636 23.736 15.3264 23.6034 15.9724C23.4742 16.6031 23.2827 17.2223 23.0319 17.8142C22.7869 18.3957 22.483 18.956 22.1278 19.4785C21.778 19.9977 21.375 20.4848 20.9322 20.9289C20.4886 21.371 20.0004 21.7734 19.482 22.1252C18.9584 22.4783 18.398 22.7821 17.8169 23.0286C17.2249 23.2784 16.605 23.4698 15.9757 23.599C15.3296 23.732 14.6652 23.7999 14.0014 23.7999C13.3371 23.7999 12.6727 23.732 12.0276 23.599C11.3972 23.4698 10.7774 23.2784 10.1858 23.0286C9.6048 22.7821 9.04383 22.4783 8.52023 22.1252C8.00189 21.7734 7.5137 21.371 7.07098 20.9289C6.62779 20.4848 6.22477 19.9977 5.87442 19.4785C5.5212 18.956 5.21678 18.3956 4.97079 17.8142C4.71996 17.2223 4.52806 16.6031 4.39835 15.9724C4.26722 15.3264 4.2002 14.6636 4.2002 14C4.2002 13.3358 4.26718 12.6716 4.39839 12.027C4.5281 11.3963 4.72 10.7762 4.97082 10.1852C5.21682 9.60336 5.52124 9.04256 5.87446 8.52C6.22481 8.00035 6.62783 7.51415 7.07101 7.0696C7.51374 6.62743 8.00193 6.226 8.52027 5.87477C9.04387 5.52017 9.60484 5.21635 10.1859 4.96941C10.7775 4.7191 11.3972 4.52724 12.0276 4.39902C12.6728 4.26696 13.3371 4.19995 14.0014 4.19995C14.6652 4.19995 15.3296 4.26696 15.9757 4.39902C16.6051 4.52728 17.2249 4.71914 17.817 4.96941C18.398 5.21631 18.9585 5.52017 19.4821 5.87477C20.0004 6.226 20.4886 6.62743 20.9323 7.0696C21.375 7.51415 21.778 8.00035 22.1279 8.52C22.483 9.04256 22.7869 9.6034 23.0319 10.1852C23.2827 10.7762 23.4742 11.3963 23.6034 12.027C23.736 12.6716 23.8034 13.3358 23.8034 14ZM10.43 6.43032C8.09572 7.53236 6.35355 9.6828 5.81031 12.2744L5.81835 12.2745C6.10442 12.2772 9.56143 12.3092 13.5381 11.2528C12.0894 8.67932 10.5415 6.57917 10.43 6.43032ZM5.63752 13.733C5.78588 13.7387 9.92165 13.8315 14.2316 12.5415C14.4714 13.0114 14.7007 13.488 14.9108 13.9636C14.8007 13.9952 14.6896 14.0277 14.5805 14.0641C10.0633 15.5245 7.77262 19.5876 7.7755 19.5919C6.44206 18.1099 5.63081 16.1499 5.63081 14C5.63081 13.9379 5.63285 13.8772 5.63491 13.816L5.63491 13.816C5.63584 13.7885 5.63677 13.7609 5.63752 13.733ZM19.5294 7.71898C18.0557 6.41978 16.1207 5.63172 14.0014 5.63172C13.3212 5.63172 12.6612 5.71403 12.029 5.86619L12.0426 5.88442C12.2408 6.14984 13.766 8.19232 15.1582 10.748C18.2907 9.57384 19.4891 7.77928 19.5287 7.72009L19.5294 7.71898ZM15.4609 15.3569L15.4813 15.3503C16.6591 18.4109 17.1454 20.9738 17.2693 21.705C16.2647 22.1323 15.1606 22.3682 14.0014 22.3682C12.0601 22.3682 10.2777 21.7017 8.85667 20.5968C8.87412 20.5589 10.4869 17.0899 15.4257 15.3685C15.4373 15.3643 15.4491 15.3606 15.4609 15.3569ZM18.679 20.9404C20.5585 19.6723 21.8934 17.6587 22.2657 15.3264C22.0934 15.2709 19.7515 14.5296 17.0497 14.9627C18.1477 17.9793 18.5938 20.436 18.679 20.9404ZM16.3586 13.2085C16.1849 12.8003 15.9967 12.3941 15.8025 11.995C19.0862 10.6542 20.4326 8.73089 20.4652 8.68433L20.4657 8.68366C21.6402 10.1091 22.35 11.9299 22.3691 13.9138C22.3668 13.9133 22.3635 13.9126 22.3592 13.9117C22.1395 13.866 19.36 13.2872 16.5395 13.642C16.4807 13.4985 16.4204 13.3549 16.3586 13.2085Z" fill="white"></path></svg>`,
      link: "https://www.linkedin.com/in/nikhiluday",
      profile: "Dribble",
    },
  ];
  return (
    <div className="max-w-screen-2xl mx-auto px-5 ">
      <div className="pt-4 border-zinc-100 border-2 border-opacity-30 shadow-[0px_-10px_30px_rgba(255,255,255,.09)]  rounded-xl ">
        <div className="flex justify-end   gap-10 px-10 py-5 text-zinc-300  text-sm ">
          <div className="basis-3/4 sm:text-lg text-nowrap">
            <h1 className="font-semibold">
              Where aesthetics & <br />{" "}
              <span className="text-blue-400">functionality</span> meet.
            </h1>
          </div>
          <div className="basis-1/6  ">
            <h4 className="text-orange-400 font-medium">Explore</h4>
            <div className="mt-8">
              {["Home", "Projects", "About Me"].map((elem, index) => {
                return (
                  <Link
                    className="block mt-2 hover:text-blue-400"
                    key={index}
                    to={
                      elem == "Home"
                        ? "/"
                        : elem.replace(/\s+/g, "").toLowerCase()
                    }
                  >
                    {elem}
                  </Link>
                );
              })}
            </div>
          </div>
          <div className="basis-1/6 ">
            <h4 className="text-blue-400 font-medium">Follow Me</h4>
            <div className="mt-8">
              {data.map((elem, index) => {
                return (
                  <Link
                  key={index}
                    className="block mt-2 hover:text-blue-400"
                    target="_blank"
                    to={elem.link}
                  >
                    <div className="flex items-center  gap-1">
                      <div dangerouslySetInnerHTML={{ __html: elem.img }} />
                      {elem.profile}
                    </div>
                  </Link>
                );
              })}
            </div>
          </div>
          <div className="basis-1/2 flex  flex-col items-end justify-center gap-4  ">
            <p className="text-right text-base text-white">
              <span className="font-medium text-orange-400">Design</span> is not
              just what it looks like <br />
              and feels like.{" "}
              <span className="font-medium text-blue-400">Design</span> is how
              it works.
            </p>
            <img
              src="https://assets-global.website-files.com/6334198f239547d0f9cd84b3/63455da11b54556c9d28aa3e_Badge-EnterprisePartner-Blue%201.svg"
              alt="footer"
              className="w-32 mt-5"
            />
          </div>
        </div>
        <div className="relative sm:h-[13rem] h-[7rem] text-center overflow-hidden  ">
          <Link className="pointer-events-none ">
            <span
              style={{ boxShadow: "0 0 .45em #00FF19" }}
              className="absolute sm:top-14 sm:left-8 top-7 left-5 bg-green-500 w-3 h-3 rounded-full "
            ></span>
            <h1 className="sm:text-[14rem]  2xl:text-[16rem] text-[7.5rem]  text-zinc-400  font-medium tracking-tight ">
              nikhiluday
            </h1>
          </Link>
        </div>
      </div>

      <div className="p-3 gap-5 text-[.8em] ">
        <div className="flex justify-between">
          <h4>nikhiluday ©2025 - Privacy Policy</h4>
          <h4>Rajasthan, India</h4>
          <SiteViewCounter />
        </div>
      </div>
    </div>
  );
};

export default Footer;
